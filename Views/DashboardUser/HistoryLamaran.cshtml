@using PROJECT_CAREERCIN.Models.DTO
@model List<HistoryLamaranDTO>

@{
    Layout = "_LayoutUser";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    /* Container styling */
    .history-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 0 15px;
    }

    /* Section title */
    .section-title {
        font-size: 24px;
        font-weight: 700;
        margin-bottom: 25px;
        color: #1a1a1a;
        position: relative;
        padding-bottom: 12px;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 60px;
        height: 4px;
        background: linear-gradient(90deg, #0a66c2, #00a0ff);
        border-radius: 2px;
    }

    /* Application item styling */
    .application-item {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        border-left: 4px solid #0a66c2;
        position: relative;
        overflow: hidden;
    }

    .application-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
    }

    .application-item::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100px;
        height: 100px;
        background: rgba(10, 102, 194, 0.03);
        border-radius: 0 0 0 100%;
        z-index: 0;
    }

    .application-header {
        display: flex;
        align-items: center;
        position: relative;
        z-index: 1;
    }

    .application-company-logo {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        object-fit: cover;
        border: 1px solid #eaeaea;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
        background: white;
        padding: 4px;
        flex-shrink: 0;
    }

    .application-info {
        flex-grow: 1;
        margin-left: 15px;
        min-width: 0;
    }

    .application-job-title {
        font-size: 18px;
        font-weight: 700;
        margin-bottom: 6px;
        color: #1a1a1a;
        line-height: 1.3;
    }

    .application-company-name {
        font-size: 14px;
        color: #666;
        margin-bottom: 8px;
        line-height: 1.4;
    }

    .application-date {
        font-size: 12px;
        color: #6c757d;
        display: flex;
        align-items: center;
        margin-right: 15px;
        white-space: nowrap;
    }

    .application-date::before {
        content: '📅';
        margin-right: 5px;
    }

    /* Status Badge */
    .application-status {
        display: inline-flex;
        align-items: center;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        margin-right: 15px;
        text-transform: capitalize;
        white-space: nowrap;
    }

    /* Variasi status */
    .status-diproses {
        background: rgba(46, 125, 50, 0.1);
        color: #2e7d32;
        border: 1px solid rgba(46, 125, 50, 0.2);
    }

    .status-ditolak {
        background: rgba(198, 40, 40, 0.1);
        color: #c62828;
        border: 1px solid rgba(198, 40, 40, 0.2);
    }

    .status-diterima {
        background: rgba(21, 101, 192, 0.1);
        color: #1565c0;
        border: 1px solid rgba(21, 101, 192, 0.2);
    }

    /* Delete Button */
    .delete-form {
        margin-left: 10px;
    }

    .delete-btn {
        background: none;
        border: none;
        color: #6c757d;
        font-size: 16px;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
    }

    .delete-btn:hover {
        background: #f8d7da;
        color: #c9302c;
        transform: scale(1.1);
    }

    /* Application details */
    .application-details {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px solid #eaeaea;
        position: relative;
        z-index: 1;
    }

    /* Empty state */
    .empty-history {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        margin-top: 20px;
    }

    .empty-history i {
        font-size: 64px;
        color: #dee2e6;
        margin-bottom: 15px;
    }

    .empty-history h3 {
        font-size: 20px;
        color: #6c757d;
        margin-bottom: 10px;
    }

    .empty-history p {
        color: #adb5bd;
        margin-bottom: 20px;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .application-header {
            flex-wrap: wrap;
        }
        
        .application-info {
            width: 100%;
            margin: 10px 0;
        }
        
        .application-status-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
            margin-top: 10px;
        }
        
        .application-date {
            margin-right: 0;
            font-size: 11px;
        }
        
        .application-status {
            margin-right: 0;
            padding: 6px 12px;
        }
    }

    /* Animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .application-item {
        animation: fadeIn 0.5s ease forwards;
    }

    .application-item:nth-child(1) { animation-delay: 0.1s; }
    .application-item:nth-child(2) { animation-delay: 0.2s; }
    .application-item:nth-child(3) { animation-delay: 0.3s; }
    .application-item:nth-child(4) { animation-delay: 0.4s; }
    .application-item:nth-child(5) { animation-delay: 0.5s; }
</style>

<section id="history-section">
    <div class="history-container">
        <h2 class="section-title">Application History</h2>

        @if (Model != null && Model.Any())
        {
            <div class="applications-list">
                @foreach (var data in Model)
                {
                    <div class="application-item">
                        <div class="application-header">
                            <img src="@Url.Content(data.Logo)" alt="Company Logo" class="application-company-logo" onerror="this.src='https://via.placeholder.com/60x60?text=Company'">
                            
                            <div class="application-info">
                                <h3 class="application-job-title">@data.Posisi</h3>
                                <p class="application-company-name">@data.Deskripsi</p>
                            </div>
                            
                            <span class="application-date">@data.TanggalDilamar.ToString("dd MMM yyyy")</span>
                            
@*                             <span class="application-status status-@data.Status.ToLower()">@data.Status</span>
 *@
                            <span class="application-status status-@(data.Status.ToString().ToLowerInvariant())">@data.Status</span>

                            <form class="delete-form" method="post" action="@Url.Action("DeleteHistoryLamaran", "DashboardUser")">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@data.Id" />
                                <button type="submit" class="delete-btn" title="Delete Application">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </div>
                        
                        <div class="application-details">
                            <div class="application-id">
                                <small>ID: @data.Id</small>
                            </div>
                            <div class="application-time">
                                <small>Applied at: @data.TanggalDilamar.ToString("HH:mm")</small>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-history">
                <i class="fas fa-file-alt"></i>
                <h3>No application history yet</h3>
                <p>Your job applications will appear here once you apply</p>
                <a href="@Url.Action("Index", "DashboardUser")" class="quick-apply-btn" style="text-decoration: none;">
                    Browse Jobs <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        }
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Add event listeners to all delete forms
        const deleteForms = document.querySelectorAll('.delete-form');
        
        deleteForms.forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                
                Swal.fire({
                    title: 'Delete Application?',
                    text: "Are you sure you want to delete this application record?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Show loading state
                        const deleteBtn = form.querySelector('.delete-btn');
                        const originalHtml = deleteBtn.innerHTML;
                        deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                        deleteBtn.disabled = true;
                        
                        // Submit form
                        fetch(form.action, {
                            method: form.method,
                            body: new FormData(form)
                        })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            }
                            throw new Error('Network response was not ok.');
                        })
                        .then(data => {
                            if (data.success) {
                                // Show success message
                                Swal.fire({
                                    title: 'Deleted!',
                                    text: 'Your application record has been deleted.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    // Remove the item from DOM with animation
                                    const item = form.closest('.application-item');
                                    item.style.opacity = '0';
                                    item.style.transform = 'translateY(20px)';
                                    item.style.transition = 'all 0.3s ease';
                                    
                                    setTimeout(() => {
                                        item.remove();
                                        
                                        // Check if no items left
                                        if (document.querySelectorAll('.application-item').length === 0) {
                                            location.reload();
                                        }
                                    }, 300);
                                });
                            } else {
                                throw new Error(data.message || 'Deletion failed');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error', 'Failed to delete application record.', 'error');
                            deleteBtn.innerHTML = originalHtml;
                            deleteBtn.disabled = false;
                        });
                    }
                });
            });
        });
        
        // Show messages from server
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            Swal.fire({
                title: 'Success!',
                text: '@TempData["SuccessMessage"]',
                icon: 'success',
                confirmButtonColor: '#0a66c2',
                timer: 3000
            });
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            Swal.fire({
                title: 'Error!',
                text: '@TempData["ErrorMessage"]',
                icon: 'error',
                confirmButtonColor: '#d33'
            });
            </text>
        }
    });
</script>