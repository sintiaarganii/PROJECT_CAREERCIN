﻿@using PROJECT_CAREERCIN.Models.DTO
@model List<LowonganTersimpanViewDTO>

@{
    Layout = "_LayoutUser";
}

<style>
    /* Container list */
    .saved-jobs-list {
        display: flex;
        flex-direction: column;
        gap: 16px;
        margin-top: 20px;
    }

    /* Each job card */
    .saved-job-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #fff;
        padding: 16px;
        border-radius: 10px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .saved-job-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.15);
        }

    /* Left section (logo + info) */
    .saved-job-left {
        display: flex;
        align-items: center;
        gap: 14px;
    }

    /* Company logo */
    .saved-company-logo {
        width: 50px;
        height: 50px;
        border-radius: 50%; /* bulat */
        object-fit: cover;
    }

    /* Info */
    .saved-job-info {
        display: flex;
        flex-direction: column;
    }

    .saved-job-title {
        font-size: 16px;
        font-weight: 600;
        margin: 0;
    }

    .saved-job-company {
        font-size: 14px;
        color: #555;
        margin: 2px 0;
    }

    .saved-job-desc {
        font-size: 13px;
        color: #777;
        margin: 2px 0;
        max-width: 400px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .saved-job-time {
        font-size: 12px;
        color: #999;
    }

    /* Action buttons */
    .saved-job-actions {
        display: flex;
        gap: 10px;
    }

    .saved-job-action-btn {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 18px;
        color: #555;
        transition: color 0.2s ease;
    }

        .saved-job-action-btn:hover {
            color: #007bff;
        }

</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<section id="saved-jobs-section">
    <h2 class="section-title">Saved Jobs</h2>

    <div class="saved-jobs-list">
        @foreach (var data in Model)
        {
            <div class="saved-job-card">
                <div class="saved-job-left">
                    <img src="@data.Logo" alt="@data.NamaPerusahaan" class="saved-company-logo" />
                    <div class="saved-job-info">
                        <h3 class="saved-job-title">@data.Posisi</h3>
                        <p class="saved-job-company">@data.NamaPerusahaan</p>
                        <p class="saved-job-desc">@data.Deskripsi</p>
                        <span class="saved-job-time">Disimpan @data.TimeAgo</span>
                    </div>
                </div>

                <div class="saved-job-actions">

                    <button class="saved-job-action-btn" title="Apply">
                        <a href="@Url.Action("FormLamaran", "DashboardUser", new { lowonganId = data.LowonganId })" class="fas fa-paper-plane">
                        </a>
                    </button>


                    <form id="deleteForm" method="post" action="@Url.Action("DeleteLowonganTersimpan", "DashboardUser")">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@data.Id" />
                        <button class="saved-job-action-btn" title="Remove">
                            <i class="fas fa-trash"></i>
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>
</section>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll("#deleteForm").forEach(function (form) {
            form.addEventListener("submit", function (e) {
                e.preventDefault(); // cegah submit langsung

                Swal.fire({
                    title: 'Yakin ingin menghapus?',
                    text: "Data ini hanya akan hilang dari daftar Anda!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Ya, Hapus',
                    cancelButtonText: 'Batal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Submit form
                        fetch(form.action, {
                            method: form.method,
                            body: new FormData(form)
                        })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire({
                                    title: 'Berhasil!',
                                    text: 'Data berhasil dihapus.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    // Reload page atau hapus element dari DOM
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Gagal', 'Terjadi kesalahan saat menghapus.', 'error');
                            }
                        })
                        .catch(() => {
                            Swal.fire('Error', 'Tidak dapat menghubungi server.', 'error');
                        });
                    }
                });
            });
        });
    });
</script>