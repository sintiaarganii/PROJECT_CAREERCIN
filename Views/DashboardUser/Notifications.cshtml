@using PROJECT_CAREERCIN.Models.DTO
@model List<NotificationsDTO>
@{
    Layout = "_LayoutUser";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    .notifications-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .section-title {
        font-size: 24px;
        font-weight: 700;
        margin-bottom: 25px;
        color: #1a1a1a;
        position: relative;
        padding-bottom: 12px;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 4px;
            background: linear-gradient(90deg, #0a66c2, #00a0ff);
            border-radius: 2px;
        }

    .notification-card {
        display: flex;
        align-items: flex-start;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        border-left: 4px solid #0a66c2;
        position: relative;
        overflow: hidden;
    }

        .notification-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        }

    .notification-icon {
        margin-right: 15px;
        flex-shrink: 0;
    }

    .company-logo {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        border: 1px solid #eaeaea;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    }

        .company-logo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .notification-content {
        flex-grow: 1;
        min-width: 0;
        position: relative;
        z-index: 1;
    }

    .notification-title {
        font-size: 16px;
        font-weight: 600;
        margin-bottom: 8px;
        color: #1a1a1a;
        line-height: 1.4;
    }

    .notification-desc {
        font-size: 14px;
        color: #444;
        margin-bottom: 10px;
        line-height: 1.5;
    }

    .notification-time {
        font-size: 12px;
        color: #6c757d;
        display: flex;
        align-items: center;
    }

    .notification-actions {
        display: flex;
        gap: 10px;
        flex-shrink: 0;
        margin-left: 15px;
        position: relative;
        z-index: 1;
    }

    .notification-action-btn {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
        color: #6c757d;
        transition: all 0.3s ease;
        padding: 8px;
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
    }

        .notification-action-btn:hover {
            background-color: rgba(10, 102, 194, 0.1);
            color: #0a66c2;
            transform: scale(1.1);
        }

        .notification-action-btn.apply-btn:hover {
            background-color: rgba(40, 167, 69, 0.1);
            color: #28a745;
        }

        .notification-action-btn.delete-btn:hover {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

    .empty-notifications {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        margin-top: 20px;
    }

        .empty-notifications i {
            font-size: 64px;
            color: #dee2e6;
            margin-bottom: 15px;
        }

    .quick-apply-btn {
        background: #0a66c2;
        color: white;
        padding: 10px 18px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 4px rgba(10, 102, 194, 0.3);
    }
</style>

<section id="notifications-section">
    <div class="notifications-container">
        <h2 class="section-title">Notifications</h2>

        @if (Model != null && Model.Any())
        {
            <div class="notifications-list">
                @foreach (var data in Model)
                {
                    <div class="notification-card">
                        <div class="notification-icon">
                            <div class="company-logo">
                                <img src="@data.Logo" alt="@data.NamaPerusahaan" onerror="this.src='https://via.placeholder.com/60x60?text=Company'" />
                            </div>
                        </div>

                        <div class="notification-content">
                            <h3 class="notification-title">
                                New job matches your profile: <strong>@data.Posisi</strong> at <strong>@data.NamaPerusahaan</strong>
                            </h3>
                            <p class="notification-desc">@data.Deskripsi</p>
                            <p class="notification-time">@data.TimeAgo</p>
                        </div>

                        <div class="notification-actions">
                            <a href="@Url.Action("FormLamaran", "DashboardUser", new { lowonganId = data.Id })"
                               class="notification-action-btn apply-btn" title="Apply for this job">
                                <i class="fas fa-paper-plane"></i>
                            </a>

                            <form class="delete-form" method="post" action="@Url.Action("DeleteNotifications", "DashboardUser")">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@data.Id" />
                                <button type="submit" class="notification-action-btn delete-btn" title="Delete notification">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-notifications">
                <i class="fas fa-bell"></i>
                <h3>No notifications yet</h3>
                <p>You'll see important updates here</p>
                <a href="@Url.Action("Index", "DashboardUser")" class="quick-apply-btn">
                    Browse Jobs <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        }
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.delete-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Yakin ingin menghapus?',
                    text: "Data ini hanya akan hilang dari daftar Anda!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Ya, Hapus',
                    cancelButtonText: 'Batal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(form.action, {
                            method: form.method,
                            body: new FormData(form)
                        })
                            .then(response => {
                                if (response.ok) {
                                    Swal.fire({
                                        title: 'Berhasil!',
                                        text: 'Data berhasil dihapus.',
                                        icon: 'success',
                                        showConfirmButton: false,
                                        timer: 1500
                                    }).then(() => {
                                        const notification = form.closest('.notification-card');
                                        notification.style.opacity = '0';
                                        setTimeout(() => notification.remove(), 300);
                                    });
                                } else {
                                    Swal.fire('Gagal', 'Terjadi kesalahan saat menghapus.', 'error');
                                }
                            })
                            .catch(() => {
                                Swal.fire('Error', 'Tidak dapat menghubungi server.', 'error');
                            });
                    }
                });
            });
        });
    });
</script>
