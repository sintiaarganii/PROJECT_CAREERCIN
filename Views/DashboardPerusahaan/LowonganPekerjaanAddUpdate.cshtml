﻿@using PROJECT_CAREERCIN.Models.DB
@model LowonganPekerjaan

@{
    Layout = "_LayoutPerusahaan";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<style>
    /* Variabel CSS */
    :root {
        --primary: #0a66c2;
        --primary-light: #378fe9;
        --primary-dark: #004182;
        --success: #0b8457;
        --danger: #e03e3e;
        --warning: #e9a114;
        --info: #06b6d4;
        --dark: #1f2937;
        --light: #f9fafb;
        --card-bg: #ffffff;
        --text-dark: #2d3748;
        --text-light: #718096;
        --border: #e2e8f0;
        --border-radius: 12px;
        --border-radius-sm: 8px;
        --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-hover: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        --transition: all 0.3s ease;
        --transition-slow: all 0.5s ease;
    }

    /* Reset dan base styles */
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f3f4f6;
        color: var(--text-dark);
        line-height: 1.6;
        overflow-x: hidden;
    }

    /* Form container styling */
    .form-container {
        max-width: 800px;
        margin: 30px auto;
        padding: 0;
        background: var(--card-bg);
        box-shadow: var(--shadow);
        border-radius: var(--border-radius);
        overflow: hidden;
        animation: slideInUp 0.6s ease-out;
        border: 1px solid var(--border);
    }

    /* Header form */
    .form-header {
        padding: 24px 32px;
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        color: white;
        display: flex;
        align-items: center;
        gap: 16px;
    }

        .form-header i {
            font-size: 24px;
            background: rgba(255, 255, 255, 0.2);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
        }

        .form-header:hover i {
            transform: rotate(10deg) scale(1.1);
        }

        .form-header h3 {
            font-size: 24px;
            font-weight: 600;
            margin: 0;
        }

    /* Form body */
    .form-body {
        padding: 32px;
    }

    /* Form group styling */
    .form-group {
        margin-bottom: 24px;
        position: relative;
        animation: fadeInUp 0.6s ease-out;
    }

        .form-group label {
            display: block;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 8px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .form-group label i {
                color: var(--primary);
                width: 18px;
            }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 14px 16px;
            border: 2px solid var(--border);
            border-radius: var(--border-radius-sm);
            transition: var(--transition);
            font-family: 'Inter', sans-serif;
            font-size: 15px;
            background: var(--light);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 120px;
        }

            .form-group input:focus,
            .form-group select:focus,
            .form-group textarea:focus {
                outline: none;
                border-color: var(--primary);
                background: white;
                box-shadow: 0 0 0 3px rgba(10, 102, 194, 0.1);
            }

            .form-group input:hover,
            .form-group select:hover,
            .form-group textarea:hover {
                border-color: #cbd5e1;
            }

    /* Validation styles */
    .text-danger {
        color: var(--danger);
        font-size: 13px;
        margin-top: 6px;
        display: block;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .text-danger i {
            font-size: 14px;
        }

    .form-group input.error,
    .form-group select.error,
    .form-group textarea.error {
        border-color: var(--danger);
    }

    /* Button styling */
    .form-actions {
        display: flex;
        gap: 16px;
        margin-top: 32px;
        padding-top: 24px;
        border-top: 1px solid var(--border);
        animation: fadeInUp 0.8s ease-out;
    }

    .btn {
        padding: 14px 28px;
        border: none;
        border-radius: var(--border-radius-sm);
        cursor: pointer;
        color: white;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        transition: var(--transition);
        font-weight: 600;
        text-decoration: none;
        font-size: 15px;
        flex: 1;
        justify-content: center;
        box-shadow: var(--shadow);
    }

    .btn-primary {
        background: var(--primary);
    }

        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
        }

    .btn-cancel {
        background: var(--text-light);
    }

        .btn-cancel:hover {
            background: #4b5563;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
        }

    /* Animations */
    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.4);
        }

        50% {
            transform: scale(1.02);
            box-shadow: 0 0 0 8px rgba(239, 68, 68, 0);
        }

        100% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
        }
    }

    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }

        10%, 30%, 50%, 70%, 90% {
            transform: translateX(-5px);
        }

        20%, 40%, 60%, 80% {
            transform: translateX(5px);
        }
    }

    /* Stagger animations for form groups */
    .form-group:nth-child(1) {
        animation-delay: 0.1s;
    }

    .form-group:nth-child(2) {
        animation-delay: 0.2s;
    }

    .form-group:nth-child(3) {
        animation-delay: 0.3s;
    }

    .form-group:nth-child(4) {
        animation-delay: 0.4s;
    }

    .form-group:nth-child(5) {
        animation-delay: 0.5s;
    }

    .form-group:nth-child(6) {
        animation-delay: 0.6s;
    }

    .form-group:nth-child(7) {
        animation-delay: 0.7s;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .form-container {
            margin: 16px;
            border-radius: var(--border-radius);
        }

        .form-header {
            padding: 20px 24px;
            flex-direction: column;
            text-align: center;
            gap: 12px;
        }

            .form-header i {
                width: 45px;
                height: 45px;
            }

        .form-body {
            padding: 24px;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }
    }

    @@media (min-width: 769px) and (max-width: 1024px) {
        .form-container {
            max-width: 700px;
        }

        .form-body {
            padding: 28px;
        }
    }

    /* Loading state */
    .btn-loading {
        position: relative;
        color: transparent;
    }

        .btn-loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Floating label effect */
    .form-group {
        position: relative;
    }

    /* Select dropdown styling */
    select {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 16px center;
        background-size: 16px;
        padding-right: 45px;
    }

    /* Focus effects */
    .form-group input:focus,
    .form-group select:focus,
    .form-group textarea:focus {
        transform: translateY(-2px);
    }
</style>

<body>
    <div class="page active" id="update-lowongan">
        <div class="form-container">
            <div class="form-header">
                <i class="fas fa-briefcase"></i>
                <h3 style="color: white;">@(Model.Id == 0 ? "Tambah Lowongan Baru" : "Update Lowongan")</h3>
            </div>

            <div class="form-body">
                <form method="post" id="upjob-form" asp-action="LowonganPekerjaanAddUpdate" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />

                    <div class="form-group">
                        <label><i class="fas fa-heading"></i> Judul Lowongan</label>
                        <input asp-for="Judul" class="form-control" placeholder="Masukkan judul lowongan" required />
                        <span asp-validation-for="Judul" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-user-tie"></i> Posisi</label>
                        <select asp-for="Posisi" class="form-control" required>
                            <option value="">-- Pilih Posisi --</option>
                            <option>BackEnd Developer</option>
                            <option>FrontEnd Developer</option>
                            <option>FullStack Developer</option>
                            <option>C# Developer</option>
                            <option>.Net Developer</option>
                            <option>Java Developer</option>
                            <option>Golang Developer</option>
                        </select>
                        <span asp-validation-for="Posisi" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-map-marker-alt"></i> Alamat</label>
                        <input asp-for="Alamat" class="form-control" placeholder="Masukkan alamat perusahaan" required />
                        <span asp-validation-for="Alamat" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-file-alt"></i> Deskripsi Lowongan</label>
                        <textarea asp-for="Deskripsi" class="form-control" placeholder="Jelaskan detail lowongan, persyaratan, dan benefit yang ditawarkan..." required></textarea>
                        <span asp-validation-for="Deskripsi" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-tags"></i> Kategori</label>
                        <select asp-for="KategoriId" asp-items="ViewBag.Kategori" class="form-control" required>
                            <option value="">-- Pilih Kategori --</option>
                        </select>
                        <span asp-validation-for="KategoriId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-toggle-on"></i> Status Lowongan</label>
                        <select asp-for="status" class="form-control" required>
                            <option value="Active">Aktif (Menerima lamaran)</option>
                            <option value="Closed">Ditutup (Tidak menerima lamaran)</option>
                        </select>
                        <span asp-validation-for="status" class="text-danger"></span>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary" id="submit-btn">
                            <i class="fas fa-save"></i> Simpan
                        </button>
                        <a href="@Url.Action("LowonganPekerjaan", "DashboardPerusahaan")" class="btn btn-cancel">
                            <i class="fas fa-times"></i> Batal
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById('upjob-form');
            const submitBtn = document.getElementById('submit-btn');

            // Real-time validation
            const inputs = form.querySelectorAll('input, select, textarea');
            inputs.forEach(input => {
                input.addEventListener('blur', function () {
                    validateField(this);
                });

                input.addEventListener('input', function () {
                    if (this.classList.contains('error')) {
                        validateField(this);
                    }
                });
            });

            function validateField(field) {
                const errorElement = field.nextElementSibling;
                if (field.hasAttribute('required') && !field.value.trim()) {
                    field.classList.add('error');
                    if (errorElement && errorElement.classList.contains('text-danger')) {
                        errorElement.textContent = 'Field ini wajib diisi';
                    }
                } else {
                    field.classList.remove('error');
                    if (errorElement && errorElement.classList.contains('text-danger')) {
                        errorElement.textContent = '';
                    }
                }
            }

            form.addEventListener('submit', function (e) {
                e.preventDefault();

                // Validate all fields
                let isValid = true;
                inputs.forEach(input => {
                    if (input.hasAttribute('required') && !input.value.trim()) {
                        input.classList.add('error');
                        const errorElement = input.nextElementSibling;
                        if (errorElement && errorElement.classList.contains('text-danger')) {
                            errorElement.textContent = 'Field ini wajib diisi';
                        }
                        isValid = false;

                        // Add shake animation to error fields
                        input.style.animation = 'shake 0.5s ease';
                        setTimeout(() => {
                            input.style.animation = '';
                        }, 500);
                    }
                });

                if (!isValid) {
                    // Scroll to first error
                    const firstError = form.querySelector('.error');
                    if (firstError) {
                        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        // Pulse animation for error field
                        firstError.style.animation = 'pulse 0.5s ease, shake 0.5s ease';
                        setTimeout(() => {
                            firstError.style.animation = '';
                        }, 500);
                    }

                    Swal.fire({
                        title: 'Perhatian!',
                        text: 'Harap isi semua field yang wajib diisi',
                        icon: 'warning',
                        confirmButtonColor: '#0a66c2'
                    });
                    return;
                }

                // Tampilkan konfirmasi
                Swal.fire({
                    title: '@(Model.Id == 0 ? "Tambah Lowongan?" : "Update Lowongan?")',
                    text: "Apakah Anda yakin ingin @(Model.Id == 0 ? "menambah" : "mengupdate") lowongan ini?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#0a66c2',
                    cancelButtonColor: '#6b7280',
                    confirmButtonText: 'Ya, @(Model.Id == 0 ? "Tambah" : "Update")',
                    cancelButtonText: 'Batal',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Show loading state
                        submitBtn.classList.add('btn-loading');
                        submitBtn.disabled = true;

                        // Submit form
                        setTimeout(() => {
                            form.submit();
                        }, 800);
                    }
                });
            });

            // Tampilkan popup success jika ada pesan dari controller
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                        Swal.fire({
                            title: 'Berhasil!',
                        text: '@TempData["SuccessMessage"]',
                        icon: 'success',
                        confirmButtonColor: '#0a66c2',
                        confirmButtonText: 'OK'
                                }).then(() => {
                            window.location.href = '@Url.Action("LowonganPekerjaan", "DashboardPerusahaan")';
                                });
            </text>
        }

                // Tampilkan popup error jika ada pesan dari controller
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                        Swal.fire({
                            title: 'Gagal!',
                        html: '@Html.Raw(TempData["ErrorMessage"])',
                        icon: 'error',
                        confirmButtonColor: '#e03e3e',
                        confirmButtonText: 'Mengerti'
                                });
            </text>
        }
                });
    </script>
</body>