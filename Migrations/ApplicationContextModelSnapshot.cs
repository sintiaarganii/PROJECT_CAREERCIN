// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROJECT_CAREERCIN.Models;

#nullable disable

namespace PROJECT_CAREERCIN.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.KategoriPekerjaan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NamaKategori")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("KategoriPekerjaans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.Lamaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GajiDiharapkan")
                        .HasColumnType("int");

                    b.Property<int>("GajiSaatIni")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LowonganId")
                        .HasColumnType("int");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NoHP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Pendidikan")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalDilamar")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LowonganId");

                    b.HasIndex("UserId");

                    b.ToTable("Lamarans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LamaranTersimpan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatatanHR")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LamaranId")
                        .HasColumnType("int");

                    b.Property<int>("PenggunaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TanggalTersimpan")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LamaranId")
                        .IsUnique();

                    b.HasIndex("PenggunaId");

                    b.ToTable("LamaranTersimpans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LowonganPekerjaan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PerusahaanId")
                        .HasColumnType("int");

                    b.Property<string>("Posisi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TanggalDibuat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("PerusahaanId");

                    b.ToTable("LowonganPekerjaans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LowonganTersimpan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LowonganId")
                        .HasColumnType("int");

                    b.Property<int>("PenggunaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalDisimpan")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LowonganId");

                    b.HasIndex("PenggunaId");

                    b.ToTable("LowonganTersimpans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.Perusahaan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BidangUsaha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NamaPerusahaan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtpCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OtpExpiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Provinsi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalBerdiri")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Telepon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Perusahaans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OtpCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OtpExpiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Posisi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImage = "",
                            CreatedAt = new DateTime(2025, 9, 2, 14, 28, 26, 503, DateTimeKind.Local).AddTicks(1686),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$Nkdc4.PbkKIxGrTWsxUu/O18vqbXprUIGxb3/N6caRd5PFvMUoIpC",
                            Posisi = "Administrator",
                            ProfileImage = "",
                            Role = "Admin",
                            Status = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.Lamaran", b =>
                {
                    b.HasOne("PROJECT_CAREERCIN.Models.DB.LowonganPekerjaan", "Lowongan")
                        .WithMany("Lamarans")
                        .HasForeignKey("LowonganId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT_CAREERCIN.Models.DB.User", "user")
                        .WithMany("Lamarans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lowongan");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LamaranTersimpan", b =>
                {
                    b.HasOne("PROJECT_CAREERCIN.Models.DB.Lamaran", "Lamaran")
                        .WithOne("LamaranTersimpan")
                        .HasForeignKey("PROJECT_CAREERCIN.Models.DB.LamaranTersimpan", "LamaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT_CAREERCIN.Models.DB.User", "User")
                        .WithMany("RiwayatLamaran")
                        .HasForeignKey("PenggunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lamaran");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LowonganPekerjaan", b =>
                {
                    b.HasOne("PROJECT_CAREERCIN.Models.DB.KategoriPekerjaan", "Kategori")
                        .WithMany("Lowongans")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT_CAREERCIN.Models.DB.Perusahaan", "Perusahaan")
                        .WithMany("Lowongans")
                        .HasForeignKey("PerusahaanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Perusahaan");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LowonganTersimpan", b =>
                {
                    b.HasOne("PROJECT_CAREERCIN.Models.DB.LowonganPekerjaan", "Lowongan")
                        .WithMany("LowonganTersimpans")
                        .HasForeignKey("LowonganId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT_CAREERCIN.Models.DB.User", "User")
                        .WithMany("lowonganTersimpans")
                        .HasForeignKey("PenggunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lowongan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.KategoriPekerjaan", b =>
                {
                    b.Navigation("Lowongans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.Lamaran", b =>
                {
                    b.Navigation("LamaranTersimpan")
                        .IsRequired();
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.LowonganPekerjaan", b =>
                {
                    b.Navigation("Lamarans");

                    b.Navigation("LowonganTersimpans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.Perusahaan", b =>
                {
                    b.Navigation("Lowongans");
                });

            modelBuilder.Entity("PROJECT_CAREERCIN.Models.DB.User", b =>
                {
                    b.Navigation("Lamarans");

                    b.Navigation("RiwayatLamaran");

                    b.Navigation("lowonganTersimpans");
                });
#pragma warning restore 612, 618
        }
    }
}
